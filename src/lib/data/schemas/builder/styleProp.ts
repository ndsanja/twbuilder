import type { ElementTypes } from '../element.schemas';

const data: ElementTypes = {};

export const styleProps = `
    aspect-ratio: ${data?.styles && data.styles.aspectRatio};
	columns: ${data?.styles && data.styles.columns};
	break-after: ${data?.styles && data.styles.breakAfter};
	break-before: ${data?.styles && data.styles.breakBefore};
	break-inside: ${data?.styles && data.styles.breakInside};
	box-decoration-break:${data?.styles && data.styles.boxDecorationBreak} ;
	box-sizing:${data?.styles && data.styles.boxSizing} ;
	display: ${data?.styles && data.styles.display};
	float: ${data?.styles && data.styles.float};
	clear: ${data?.styles && data.styles.clear};
	isolation:${data?.styles && data.styles.isolation} ;
	object-fit: ${data?.styles && data.styles.objectFit};
	object-position: ${data?.styles && data.styles.objectPosition};
	overflow: ${data?.styles && data.styles.overflow};
	overscroll-behavior: ${data?.styles && data.styles.overscrollBehavior} ;
	position: ${data?.styles && data.styles.position};
	top: ${data?.styles && data.styles.top};
	right: ${data?.styles && data.styles.right};
	left: ${data?.styles && data.styles.left};
	bottom: ${data?.styles && data.styles.bottom};
	visibility: ${data?.styles && data.styles.visibility};
	z-index: ${data?.styles && data.styles.zIndex};
	flex-basis: ${data?.styles && data.styles.flexBasis};
	flex-direction: ${data?.styles && data.styles.flexDirection};
	flex-wrap: ${data?.styles && data.styles.flexWrap};
	flex: ${data?.styles && data.styles.flex};
	flex-grow: ${data?.styles && data.styles.flexGrow};
	flex-shrink: ${data?.styles && data.styles.flexShrink};
	order: ${data?.styles && data.styles.order};
	grid-template-columns:${data?.styles && data.styles.gridTemplateColumns} ;
	grid-column: ${data?.styles && data.styles.gridColumn};
	grid-column-start:${data?.styles && data.styles.gridColumnStart} ;
	grid-column-end: ${data?.styles && data.styles.gridColumnEnd};
	grid-template-rows:${data?.styles && data.styles.gridTemplateRows} ;
	grid-row:${data?.styles && data.styles.gridRow} ;
	grid-row-start: ${data?.styles && data.styles.gridRowStart};
	grid-row-end:${data?.styles && data.styles.gridRowEnd} ;
	grid-auto-flow: ${data?.styles && data.styles.gridAutoFlow};
	grid-auto-columns:${data?.styles && data.styles.gridAutoColumns} ;
	grid-auto-rows:${data?.styles && data.styles.gridAutoRows} ;
	gap:${data?.styles && data.styles.gap} ;
	column-gap: ${data?.styles && data.styles.columnGap};
	row-gap: ${data?.styles && data.styles.rowGap};
	justify-content: ${data?.styles && data.styles.justifyContent};
	justify-items: ${data?.styles && data.styles.justifyItems};
	justify-self:${data?.styles && data.styles.justifySelf} ;
	align-content:${data?.styles && data.styles.alignContent} ;
	align-items: ${data?.styles && data.styles.alignItems};
	align-self: ${data?.styles && data.styles.alignSelf};
	place-content:${data?.styles && data.styles.placeContent} ;
	place-items: ${data?.styles && data.styles.placeItems};
	place-self: ${data?.styles && data.styles.placeSelf};
	padding: ${data?.styles && data.styles.padding};
	padding-top:${data?.styles && data.styles.paddingTop} ;
	padding-bottom: ${data?.styles && data.styles.paddingBottom};
	padding-left: ${data?.styles && data.styles.paddingLeft};
	padding-right:${data?.styles && data.styles.paddingRight} ;
	margin:${data?.styles && data.styles.margin} ;
	margin-top: ${data?.styles && data.styles.marginTop};
	margin-bottom:${data?.styles && data.styles.marginBottom} ;
	margin-left: ${data?.styles && data.styles.marginLeft};
	margin-right:${data?.styles && data.styles.marginRight} ;
	width: ${data?.styles && data.styles.right};
	min-width: ${data?.styles && data.styles.minWidth};
	max-width:${data?.styles && data.styles.maxWidth} ;
	height: ${data?.styles && data.styles.height};
	min-height: ${data?.styles && data.styles.minHeight};
	max-height: ${data?.styles && data.styles.maxHeight};
	font-family: ${data?.styles && data.styles.fontFamily};
	font-size: ${data?.styles && data.styles.fontSize};
	font-style: ${data?.styles && data.styles.fontStyle};
	font-weight:${data?.styles && data.styles.fontWeight} ;
	font-variant-numeric:${data?.styles && data.styles.fontVariantNumeric} ;
	letter-spacing: ${data?.styles && data.styles.letterSpacing};
	line-height:${data?.styles && data.styles.lineHeight} ;
	list-style-type:${data?.styles && data.styles.listStyleType} ;
	list-style-position:${data?.styles && data.styles.listStylePosition} ;
	text-align: ${data?.styles && data.styles.textAlign};
	color: ${data?.styles && data.styles.color};
	text-decoration-line:${data?.styles && data.styles.textDecorationLine} ;
	text-decoration-color:${data?.styles && data.styles.textDecorationColor} ;
	text-decoration-style:${data?.styles && data.styles.textDecorationStyle};
	text-decoration-thickness: ${data?.styles && data.styles.textDecorationThickness};
	text-underline-offset: ${data?.styles && data.styles.textUnderlineOffset};
	text-transform: ${data?.styles && data.styles.textTransform};
	text-overflow: ${data?.styles && data.styles.textOverflow};
	text-indent: ${data?.styles && data.styles.textIndent};
	vertical-align: ${data?.styles && data.styles.verticalAalign};
	white-space:${data?.styles && data.styles.whiteSpace} ;
	overflow-wrap:${data?.styles && data.styles.overflowWrap} ;
	word-break: ${data?.styles && data.styles.wordBreak};
	content: ${data?.styles && data.styles.content};
	background-attachment: ${data?.styles && data.styles.backgroundAttachment};
	background-clip: ${data?.styles && data.styles.backgroundClip};
	background:${data?.styles && data.styles.background} ;
	background-color:${data?.styles && data.styles.backgroundColor} ;
	background-origin:${data?.styles && data.styles.backgroundOrigin} ;
	background-position:${data?.styles && data.styles.backgroundPosition} ;
	background-repeat:${data?.styles && data.styles.backgroundRepeat} ;
	background-size: ${data?.styles && data.styles.backgroundSize};
	background-image: ${data?.styles && data.styles.backgroundImage};
	border-radius:${data?.styles && data.styles.borderRadius} ;
	border-top-left-radius:${data?.styles && data.styles.borderTopLeftRadius} ;
	border-top-right-radius: ${data?.styles && data.styles.borderTopRightRadius};
	border-bottom-left-radius: ${data?.styles && data.styles.borderBottomLeftRadius};
	border-bottom-right-radius: ${data?.styles && data.styles.borderBottomRightRadius};
	border-width: ${data?.styles && data.styles.borderWidth};
	border-left-width: ${data?.styles && data.styles.borderLeftWidth};
	border-right-width: ${data?.styles && data.styles.borderRightWidth};
	border-top-width: ${data?.styles && data.styles.borderTopWidth};
	border-bottom-width: ${data?.styles && data.styles.borderBottomWidth};
	border-color: ${data?.styles && data.styles.borderColor};
	border-style: ${data?.styles && data.styles.borderStyle};
	outline-width: ${data?.styles && data.styles.outlineWidth};
	outline-color: ${data?.styles && data.styles.outlineColor};
	outline: ${data?.styles && data.styles.outline};
	outline-offset:${data?.styles && data.styles.outlineOffset} ;
	outline-style: ${data?.styles && data.styles.outlineStyle};
	box-shadow: ${data?.styles && data.styles.boxShadow};
	opacity: ${data?.styles && data.styles.opacity};
	mix-blend-mode: ${data?.styles && data.styles.mixBlendMode};
	background-blend-mode: ${data?.styles && data.styles.backgroundBlendMode};
	filter: ${data?.styles && data.styles.filter};
	backdrop-filter: ${data?.styles && data.styles.backdropFilter};
	border-collapse: ${data?.styles && data.styles.borderCollapse};
	border-spacing:${data?.styles && data.styles.borderSpacing} ;
	table-layout:${data?.styles && data.styles.tableLayout} ;
	transition-property: ${data?.styles && data.styles.transitionProperty};
	transition-timing-function: ${data?.styles && data.styles.transitionTimingFunction};
	transition-duration: ${data?.styles && data.styles.transitionDuration};
	transition-delay: ${data?.styles && data.styles.transitionDelay};
	animation: ${data?.styles && data.styles.animation};
	transform: ${data?.styles && data.styles.transform};
	transform-origin: ${data?.styles && data.styles.transformOrigin};
	accent-color:${data?.styles && data.styles.accentColor} ;
	appearance: ${data?.styles && data.styles.appearance};
	cursor: ${data?.styles && data.styles.cursor};
	caret-color: ${data?.styles && data.styles.caretColor};
	pointer-events: ${data?.styles && data.styles.pointerEvents};
	resize: ${data?.styles && data.styles.resize};
	scroll-behavior: ${data?.styles && data.styles.scrollBehavior};
	scroll-margin: ${data?.styles && data.styles.scrollMargin};
	scroll-margin-left: ${data?.styles && data.styles.scrollMarginLeft};
	scroll-margin-right: ${data?.styles && data.styles.scrollMarginRight};
	scroll-margin-bottom: ${data?.styles && data.styles.scrollMarginBottom};
	scroll-margin-top: ${data?.styles && data.styles.scrollMarginTop};
	scroll-padding: ${data?.styles && data.styles.scrollPadding};
	scroll-padding-top: ${data?.styles && data.styles.scrollPaddingTop};
	scroll-padding-bottom: ${data?.styles && data.styles.scrollPaddingBottom};
	scroll-padding-left: ${data?.styles && data.styles.scrollPaddingLeft};
	scroll-padding-right: ${data?.styles && data.styles.scrollPaddingRigth};
	scroll-snap-align: ${data?.styles && data.styles.scrollSnapAlign};
	scroll-snap-stop: ${data?.styles && data.styles.scrollSnapStop};
	scroll-snap-type: ${data?.styles && data.styles.scrollSnapType};
	touch-action: ${data?.styles && data.styles.touchAction};
	user-select: ${data?.styles && data.styles.userSelect};
	will-change: ${data?.styles && data.styles.willChange};
	fill: ${data?.styles && data.styles.fill};
	stroke: ${data?.styles && data.styles.stroke};
	stroke-width: ${data?.styles && data.styles.strokeWidth};	
`;
